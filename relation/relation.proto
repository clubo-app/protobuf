syntax = "proto3";

package relation;
option go_package = "github.com/clubo-app/protobuf/relation";

import "common/common.proto";

service RelationService {
    rpc FriendRequest (FriendRequestRequest) returns (common.SuccessIndicator) {};
    rpc AcceptFriend (AcceptFriendRequest) returns (common.SuccessIndicator) {};
    rpc RemoveFriend (RemoveFriendRequest) returns (common.SuccessIndicator) {};
    rpc GetFriendRelation (GetFriendRelationRequest) returns (FriendRelation) {};
    rpc GetFriendsOfUser (GetFriendsOfUserRequest) returns (PagedFriendRelations) {};

    rpc GetFriendCount (GetFriendCountRequest) returns (GetFriendCountResponse) {};
    rpc GetManyFriendCount (GetManyFriendCountRequest) returns (GetManyFriendCountResponse) {};

    rpc FavorParty (FavorPartyRequest) returns (FavoriteParty) {};
    rpc DefavorParty (FavorPartyRequest) returns (common.SuccessIndicator) {};
    rpc GetFavoritePartiesByUser (GetFavoritePartiesByUserRequest) returns (PagedFavoriteParties) {};
    rpc GetFavorisingUsersByParty (GetFavorisingUsersByPartyRequest) returns (PagedFavoriteParties) {}
}

// Requests
message FriendRequestRequest {
    string user_id = 1;
    string friend_id = 2;
}

message AcceptFriendRequest {
    string user_id = 1;
    string friend_id = 2;
}

message RemoveFriendRequest {
    string user_id = 1;
    string friend_id = 2;
}

message GetFriendRelationRequest {
    string user_id = 1;
    string friend_id = 2;
}

message GetFriendsOfUserRequest {
    string user_id = 1;
    string next_page = 2;
    uint32 limit = 3;
}

message GetFriendCountRequest {
    string user_id = 1;
}

message GetManyFriendCountRequest {
    repeated string user_ids = 1;
}

message FavorPartyRequest {
    string user_id = 1;
    string party_id = 2;
}

message GetFavoritePartiesByUserRequest {
    string user_id = 1;
    string next_page = 2;
    uint32 limit = 3;
}

message GetFavorisingUsersByPartyRequest {
    string party_id = 1;
    string next_page = 2;
    uint32 limit = 3;
}


// Responses
message FriendRelation {
    string user_id = 1;
    string friend_id = 2;
    bool accepted = 3;
    string requested_at = 4;
    string accepted_at = 5;
}

message PagedFriendRelations {
    repeated FriendRelation relations = 1;
    string next_page = 2;
}

message GetFriendCountResponse {
    uint32 friend_count = 1;
}

message GetManyFriendCountResponse {
    map<string, uint32> friend_counts = 1;
}

message FavoriteParty {
    string user_id = 1;
    string party_id = 2;
    string favorited_at = 3;
}

message PagedFavoriteParties {
    repeated FavoriteParty favorite_parties = 1;
    string next_page = 2;
}
